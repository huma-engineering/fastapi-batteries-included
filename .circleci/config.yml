version: 2.1
orbs:
  ms-teams: cloudradar-monitoring/ms-teams@0.0.1
jobs:
  test:
    docker:
      - image: cimg/python:3.9
        environment:
          PGSQL_HOST: localhost
          PGSQL_5432_TCP_PORT: 5432
          MSSQL_HOST: localhost
          MSSQL_1433_TCP_PORT: 1433
      - image: postgres:12-alpine
        environment:
          POSTGRES_USER: fastapi_batteries
          POSTGRES_PASSWORD: YourSTRONG!Passw0rd
          POSTGRES_DB: fastapi_batteries_db
      - image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
          MSSQL_PID: Express
          ACCEPT_EULA: 'Y'
          MSSQL_SA_PASSWORD: YourSTRONG!Passw0rd
    steps:
      - checkout
      - run:
          name: Install ODBC
          command: |
            curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
            curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > mssql-release.list
            sudo cp mssql-release.list /etc/apt/sources.list.d/mssql-release.list
            sudo apt-get update
            sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools unixodbc-dev
            echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Create coverage report dir
          command: mkdir -p ${COVERAGE_REPORT_DIR:-coverage_reports}
      - run:
          name: Set up tox tests
          command: |
            poetry self update
            poetry config http-basic.sensynehealth ${GEMFURY_DOWNLOAD_KEY} ''
            pip install --upgrade tox
      - restore_cache:
          keys:
            - v1-poetry-deps-{{ checksum "poetry.lock" }}
            - v1-poetry-deps-
      - run:
          name: Run tox tests
          command: tox -e py39-mssql,py39-pgsql
      - save_cache:
          key: v1-poetry-deps-{{ checksum "poetry.lock" }}
          paths:
            - .tox
      - persist_to_workspace:
          root: coverage-reports
          paths:
            - coverage.xml
  deploy-gemfury:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Install deps
          command: pip install --upgrade toml
      - run:
          name: Publish package to gemfury
          command: .circleci/publish_gemfury.sh
      - run:
          name: Create git tag
          command: git tag v$(python3 .circleci/parse_version.py)
      - run:
          name: Push git tag
          command: git push --tags
      - ms-teams/report:
          only_on_fail: true
          webhook_url: ${MSTEAMS_NOTIFY_WEBHOOK_URL}
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test:
          context: engineering-build
      - deploy-gemfury:
          context: engineering-build
          requires:
            - test
          filters:
            branches:
                only:
                - main
